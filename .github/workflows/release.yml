name: Build and Create Release

on:
  push:
    tags:
      - 'v*' # This triggers the workflow when you push a tag starting with 'v'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    outputs:
      changelog-content: ${{ steps.read-changelog.outputs.changelog }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Read changelog file
      run: |
          CHANGELOG=$(cat CHANGELOG.md)
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "changelog=${CHANGELOG}" >> $GITHUB_OUTPUT
    - name: Create ZIP file
      run: |
        COMMIT_ID=$(git rev-parse --short HEAD)
        ZIP_NAME="PvP For Cuties ${{ github.ref_name }}.zip"
        echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_ENV
        zip -r "${ZIP_NAME}" . -x ".git/*" ".github/*"
        echo "${ZIP_NAME}"
    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v4
      with:
        name: resource-pack-artifact
        path: ${{ env.ZIP_NAME }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.read-changelog.outputs.changelog }}
          Automated release created by GitHub Actions
        draft: false
        prerelease: false
    - name: Upload Release Artifact
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "${{ env.ZIP_NAME }}"
        asset_name: "${{ env.ZIP_NAME }}"
        asset_content_type: application/zip
    
    - name: Upload to Modrinth
      uses: cloudnode-pro/modrinth-publish@v2
      with:
        project: iQx2ijVe
        version: ${{ github.ref_name }}
        loaders: '["minecraft"]'
        game-versions: '["1.21.4", "1.21.5","1.21.6"]'
        files: '${{ env.ZIP_NAME }}'
        token: ${{ secrets.MODRINTH}}
        changelog: ${{ steps.read-changelog.outputs.changelog }}